import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-remote-api' version '6.7.0'
}

group = 'com.sbdocker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

task createDockerFile(type: Dockerfile) {
	destFile = project.file('build/Dockerfile')
	from 'openjdk:11'
	copyFile('libs/*-SNAPSHOT.jar', '/tmp/sb-docker.jar')
	entryPoint 'java'
	defaultCommand '-jar', '/app/sb-docker.jar'
	exposePort 8080
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerFile
    inputDir = file('build')
    images.add('test/myapp:latest')
}

createDockerFile.dependsOn build